plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'maven-publish'
    id 'java'
    id("com.github.johnrengelman.shadow") version "2.0.4"
}


repositories {
    mavenCentral()
    maven {
        url = uri(rootProject.properties["reposilite.release"])
    }

    maven {
        url = uri(rootProject.properties["reposilite.spigot"])
    }
}

dependencies {
    compileOnly group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.4.32'
    compileOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.4.32'
    compileOnly group: 'skywolf46', name: 'exutil', version: '1.38.0'

    testImplementation group: 'skywolf46', name: 'exutil', version: '1.38.0'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.4.32'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.4.32'
    testImplementation 'junit:junit:4.13'
}

test {
    useJUnit()

    maxHeapSize = '1G'
}

jar {
    baseName "MESTAPI-Core"
    destinationDirectory = file("$rootDir/addonJars")
    finalizedBy("shadowJar")
}

shadowJar {
    baseName "MESTAPI-Core"
    destinationDirectory = file("$rootDir/addonJars")
}


publishing {
    repositories {
        maven {
            name = "Reposilite"
            url(rootProject.properties["snapshot"] as Boolean ? rootProject.properties['reposilite.snapshot'] as String : rootProject.properties['reposilite.release'] as String)
            credentials {
                username rootProject.properties['reposilite.user'] as String
                password rootProject.properties['reposilite.token'] as String
            }
        }
    }
    publications {
        create("jar", MavenPublication) {
            groupId 'skywolf46'
            artifactId "mestapi-core"
            version rootProject.properties['version'] as String
            from components.java
        }
    }
}

